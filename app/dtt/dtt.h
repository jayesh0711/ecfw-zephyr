/*
 * Copyright (c) 2021 Intel Corporation
 *
 * SPDX-License-Identifier: Apache-2.0
 */

#ifndef __DTT_H_
#define __DTT_H_

#ifdef CONFIG_DTT_SUPPORT_THERMALS
/**
 * DTT - Dynamic Tuning Technology
 * ------------------------------------------------------
 * Also, previously known as DPTF - Dynamic Platform and Thermal Framework.
 *
 * Temperature Monitoring
 * ------------------------------
 * A key component of EC support in Intel DTT is to monitor the temperature
 * of target devices and report any temperature drifts that are of significance
 * (e.g., crossing a programmed passive trip point value) to Intel DTT
 * framework via the platform firmware. EC typically uses the shared namespace
 * to update temperature changes to the platform firmware with frequent reading
 * of the temperature data from the device itself.
 *
 * Event Generation and Hysteresis
 * -------------------------------
 * Along with temperature monitoring and reporting, EC needs to support event
 * generation to indicate to platform when an event of significance happens.
 * Intel DTT requires platform thermal sensors to support programmable
 * auxiliary trip points such that Intel DTT can offload some of the
 * temperature monitoring and the accompanying polling to the EC. The thermal
 * events generated by EC typically involve some level of hysteresis to avoid
 * spurious events caused by fluctuating temperatures
 *
 *
 * +--------------------------------------------------------------------------+
 * |      Hysteresis implementation in temperature monitoring                 |
 * |                                                                          |
 * +--------------------------------------------------------------------------+
 * |  Avg Temperature                                                         |
 * |    ^                                                                     |
 * |    |                                                                     |
 * |    |                                                                     |
 * |    |                                     XXXX                            |
 * |    |                                  XX    X                            |
 * |    | Trip Point                     XX       XX          XX              |
 * |    +-------------------------------X+----------XX------XX  XX----------  |
 * |    |                             XX |           XX    XX    XX           |
 * |    |                            XX  |             XXXXX      XX          |
 * |    |                          XX    |                         X          |
 * |    |     XXXXXXX             XX     |                         XX         |
 * |    |   XX      XX           XX      |                          X         |
 * |   ----XX---------XX-------XX-----------------------------------+X-----   |
 * |    |XX Hysteresis  XX    X          |                          | XX    X |
 * |    XX               XXXXX           |                          |  XX  X  |
 * |  XX|                                |                          |    XX   |
 * | X  |                                |                          |         |
 * |    |                                |                          |         |
 * |    |                                |                          |         |
 * |    |                                |                          |         |
 * |    |                                v                          v         |
 * |    |                                +-+                        +-+       |
 * |    | +------------------------------+ +------------------------+ +----+  |
 * |    |   Trip Event                                                        |
 * |    |                                                                     |
 * |  +---------------------------------------------------------------------> |
 * |    |                                                                Time |
 * |    +                                                                     |
 * |                                                                          |
 * +--------------------------------------------------------------------------+
 *
 * The figure above illustrates when events should be generated and how
 * hysteresis can be applied when monitoring platform thermal sensors via direct
 * hardware interaction. As the figure illustrates, applying a hysteresis value
 * to the monitored temperature, results in smoothing out unnecessary spikes and
 * fluctuations in the temperature monitoring and notifies the platform firmware
 * and Intel DTT only at meaningful instances.
 *
 */

struct dtt_threshold {
	/* Status of sensor. BIT 0 -init done(1)/failed(0), BIT4 (1)- tripped */
	uint8_t status;

	/* Low temperature for notification programmed by DTT */
	int16_t low_temp;

	/* High temperature for notification programmed by DTT */
	int16_t high_temp;

	/* Temperature hysteresis */
	int16_t temp_hyst;

};

/**
 * @brief Initialize DTT thermals module
 *
 * @param thrm_sensors thermal sensors' list defined in ACPI table.
 *
 * Also initializes threshold limits for thermal sensors to default values.
 */
void dtt_init_thermals(uint8_t *thrm_sensors);

/**
 * @brief API for SMC host to update dtt temperature thresholds.
 *
 * @param acpi_sen_idx sensor index in acpi table.
 * @param thrd dtt_threshold structure values to be updated.
 */
void smc_update_dtt_threshold_limits(enum acpi_thrm_sens_idx acpi_sen_idx,
				     struct dtt_threshold thrd);

/**
 * @brief Thermal sensor trip notification manager
 *
 * This should be called from thermal management routine after getting updated
 * values for thermal sensors.
 * If sensor reading crosses any trip point, appropriate trip event will
 * be sent out to the host.
 */
void dtt_therm_sensor_trip(void);
#endif

#endif /* __DTT_H_ */
