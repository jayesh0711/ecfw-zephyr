#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
import os
import re

def extract_version(source):
    version_str = "2.01"
    major_str = "#define.*KSC_MAJOR_VER[^0-9]+([0-9]+)"
    minor_str = "#define.*KSC_MINOR_VER[^0-9]+([0-9]+)"
    patch_str = "#define.*KSC_PATCH_ID[^0-9]+([0-9]+)"
    m = re.compile(major_str)
    n = re.compile(minor_str)
    p = re.compile(patch_str)
    found = 0
    fin = open(source, 'r')
    for line in fin:
        if found == 0:
            m_match = m.match(line)
            if m_match:
                found = 1
        if found == 1:
            n_match = n.match(line)
            if n_match:
                found = 2
        if found == 2:
            p_match = p.match(line)
            if p_match:
                found = 3
        if found == 3:
            break
    if m_match == None or n_match == None or p_match == None:
        print("Default version used", source, found)
    else:
        version_str = "{0}.{1:0>2}.{2:0>2}".format(m_match.group(1), n_match.group(1), p_match.group(1))
    return version_str

sys.path.insert(0, os.path.abspath('.'))

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = []

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'Basic Open Embedded Controller Firmware'
copyright = u'2020-2023 Intel Corporation'
author = u'Intel Embedded Controller Project'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = extract_version("../misc/flashhdr.c")
# The full version, including alpha/beta/rc tags.
release = extract_version("../misc/flashhdr.c")
print ("Basic ECFW Version: ", version)

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False

# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
import sphinx_rtd_theme
html_theme = "sphinx_rtd_theme"
html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]
html_theme_options = {
    'prev_next_buttons_location': None
}

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
#html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
# Custom sidebar templates, maps document names to template names.
#html_sidebars = {}


# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'ecfwdoc'


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'ecfw.tex', 'ecfw Documentation',
     'jamezaar', 'manual'),
]


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'ecfw', 'Basic Embedded Controller Firmware Documentation',
     [author], 1)
]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'ecfw-zephyr', 'Basic Embedded Controller Firmware Documentation',
     author, 'ecfw-zephyr', 'One line description of project.',
     'Miscellaneous'),
]



